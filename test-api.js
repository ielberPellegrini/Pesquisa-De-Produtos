const axios = require('axios');

const BASE_URL = 'http://10.101.18.219:777';

// Fun√ß√£o para testar a API
async function testarAPI() {
    console.log('üß™ Testando API de Consulta de Produtos\n');

    try {
        // Teste 1: Verificar status da aplica√ß√£o
        console.log('1Ô∏è‚É£ Testando endpoint raiz...');
        const rootResponse = await axios.get(`${BASE_URL}/`);
        console.log('‚úÖ Status da aplica√ß√£o:', rootResponse.data.message);
        console.log('üìä Endpoints dispon√≠veis:', Object.keys(rootResponse.data.endpoints));
        console.log('');

        // Teste 2: Verificar sa√∫de da aplica√ß√£o
        console.log('2Ô∏è‚É£ Testando health check...');
        const healthResponse = await axios.get(`${BASE_URL}/health`);
        console.log('‚úÖ Status da aplica√ß√£o:', healthResponse.data.status);
        console.log('üóÑÔ∏è Status do banco:', healthResponse.data.database.status);
        console.log('‚è±Ô∏è Uptime:', Math.round(healthResponse.data.uptime), 'segundos');
        console.log('');

        // Teste 3: Buscar produtos (limite 10)
        console.log('3Ô∏è‚É£ Testando busca de produtos (limite 10)...');
        const produtosResponse = await axios.get(`${BASE_URL}/api/produtos?limit=10`);
        console.log('‚úÖ Produtos encontrados:', produtosResponse.data.total);
        if (produtosResponse.data.data.length > 0) {
            const primeiroProduto = produtosResponse.data.data[0];
            console.log('üì¶ Primeiro produto:');
            console.log(`   C√≥digo: ${primeiroProduto.Codigo_Produto}`);
            console.log(`   Descri√ß√£o: ${primeiroProduto.Descricao}`);
            console.log(`   Fam√≠lia: ${primeiroProduto.Codigo_Familia}`);
            console.log(`   Usu√°rio: ${primeiroProduto.Nome_De_Quem_Cadastrou}`);
        }
        console.log('');

        // Teste 4: Buscar fam√≠lias
        console.log('4Ô∏è‚É£ Testando busca de fam√≠lias...');
        const familiasResponse = await axios.get(`${BASE_URL}/api/familias`);
        console.log('‚úÖ Fam√≠lias encontradas:', familiasResponse.data.total);
        console.log('');

        // Teste 5: Buscar usu√°rios
        console.log('5Ô∏è‚É£ Testando busca de usu√°rios...');
        const usuariosResponse = await axios.get(`${BASE_URL}/api/usuarios`);
        console.log('‚úÖ Usu√°rios encontrados:', usuariosResponse.data.total);
        console.log('');

        // Teste 6: Buscar estat√≠sticas
        console.log('6Ô∏è‚É£ Testando busca de estat√≠sticas...');
        const estatisticasResponse = await axios.get(`${BASE_URL}/api/estatisticas`);
        console.log('‚úÖ Estat√≠sticas do sistema:');
        console.log(`   Total de produtos: ${estatisticasResponse.data.data.totalProdutos}`);
        console.log(`   Total de fam√≠lias: ${estatisticasResponse.data.data.totalFamilias}`);
        console.log(`   Total de usu√°rios: ${estatisticasResponse.data.data.totalUsuarios}`);
        console.log('');

        // Teste 7: Buscar produto espec√≠fico (se existir)
        if (produtosResponse.data.data.length > 0) {
            const codigoProduto = produtosResponse.data.data[0].Codigo_Produto;
            console.log(`7Ô∏è‚É£ Testando busca de produto espec√≠fico (c√≥digo: ${codigoProduto})...`);
            const produtoEspecificoResponse = await axios.get(`${BASE_URL}/api/produtos?codigo_produto=${codigoProduto}`);
            console.log('‚úÖ Produto espec√≠fico encontrado:', produtoEspecificoResponse.data.total);
            console.log('');
        }

        console.log('üéâ Todos os testes foram executados com sucesso!');
        console.log('üöÄ A API est√° funcionando corretamente.');

    } catch (error) {
        if (error.response) {
            console.error('‚ùå Erro na resposta da API:');
            console.error('   Status:', error.response.status);
            console.error('   Mensagem:', error.response.data.message || error.response.data);
        } else if (error.request) {
            console.error('‚ùå Erro de conex√£o:');
            console.error('   N√£o foi poss√≠vel conectar ao servidor');
            console.error('   Verifique se o servidor est√° rodando na porta 201');
        } else {
            console.error('‚ùå Erro:', error.message);
        }
    }
}

// Fun√ß√£o para testar com diferentes filtros
async function testarFiltros() {
    console.log('\nüîç Testando diferentes filtros...\n');

    try {
        // Teste com diferentes limites
        const limites = [5, 20, 50];
        for (const limite of limites) {
            console.log(`üìä Testando com limite ${limite}...`);
            const response = await axios.get(`${BASE_URL}/api/produtos?limit=${limite}`);
            console.log(`   ‚úÖ Produtos retornados: ${response.data.total}`);
        }
        console.log('');

        // Teste de valida√ß√£o de par√¢metros
        console.log('‚ö†Ô∏è Testando valida√ß√£o de par√¢metros...');
        
        try {
            await axios.get(`${BASE_URL}/api/produtos?limit=0`);
        } catch (error) {
            if (error.response && error.response.status === 400) {
                console.log('   ‚úÖ Valida√ß√£o funcionando: limite 0 rejeitado');
            }
        }

        try {
            await axios.get(`${BASE_URL}/api/produtos?limit=abc`);
        } catch (error) {
            if (error.response && error.response.status === 400) {
                console.log('   ‚úÖ Valida√ß√£o funcionando: limite inv√°lido rejeitado');
            }
        }

        try {
            await axios.get(`${BASE_URL}/api/produtos?codigo_produto=abc`);
        } catch (error) {
            if (error.response && error.response.status === 400) {
                console.log('   ‚úÖ Valida√ß√£o funcionando: c√≥digo inv√°lido rejeitado');
            }
        }

        console.log('');

    } catch (error) {
        console.error('‚ùå Erro ao testar filtros:', error.message);
    }
}

// Executar testes
async function executarTestes() {
    await testarAPI();
    await testarFiltros();
    
    console.log('\nüìã Resumo dos testes:');
    console.log('   ‚úÖ Endpoint raiz funcionando');
    console.log('   ‚úÖ Health check funcionando');
    console.log('   ‚úÖ API de produtos funcionando');
    console.log('   ‚úÖ API de fam√≠lias funcionando');
    console.log('   ‚úÖ API de usu√°rios funcionando');
    console.log('   ‚úÖ API de estat√≠sticas funcionando');
    console.log('   ‚úÖ Valida√ß√£o de par√¢metros funcionando');
    
    console.log('\nüéØ Para usar a API em sua aplica√ß√£o:');
    console.log('   GET /api/produtos - Listar produtos');
    console.log('   GET /api/produtos?codigo_produto=123 - Buscar produto espec√≠fico');
    console.log('   GET /api/produtos?limit=50 - Limitar resultados');
    console.log('   GET /api/familias - Listar fam√≠lias');
    console.log('   GET /api/usuarios - Listar usu√°rios');
    console.log('   GET /api/estatisticas - Estat√≠sticas do sistema');
    console.log('   GET /health - Status da aplica√ß√£o');
}

// Executar se o arquivo for chamado diretamente
if (require.main === module) {
    executarTestes().catch(console.error);
}

module.exports = { testarAPI, testarFiltros };
